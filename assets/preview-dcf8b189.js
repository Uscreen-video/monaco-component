import{y as k,b as $}from"./lit-html-c12adefc.js";import{e as E,s as _}from"./chunk-KDRLDMCT-aa19f6a5.js";import"./index-d475d2ea.js";import"./index-356e4a49.js";var a;(function(t){t.attributes="attributes",t.slots="slots",t.properties="properties",t.methods="methods",t.css="css variables"})(a||(a={}));const A=(t,e)=>{var i,o;if(e!==a.methods)return e===a.css?{name:t.name,description:t.description||void 0,default:t.default,control:{type:"text"}}:e===a.slots?{control:{type:"text"}}:t.enum?{options:t.enum,control:{type:"select"}}:t.type==="object"?{description:x(t.description,t.properties),control:{type:"object"}}:t.type==="array"?!((i=t.items)===null||i===void 0)&&i.enum?{options:(o=t.items)===null||o===void 0?void 0:o.enum,control:{type:"multi-select"}}:{control:{type:"object"}}:t.format==="date-time"?{control:{type:"date"}}:t.type==="string"?{control:{type:"text"}}:t.type==="boolean"?{type:"boolean",control:{type:"boolean"}}:t.type==="number"?{type:"number",control:{type:"number"}}:{type:t.type}},j=(t,e)=>`
${t||""}
<details>
  <summary>*Object properties*</summary>
  <ul>
  ${e}
  </ul>
</details>
  `,x=(t,e)=>{if(!e)return t||void 0;const i=Object.keys(e).map(o=>`
    <li>
      <details>
        <summary>${o}: \`${e[o].type||"object"}\`</summary>
        ${e[o].description}
      </details>
    </li>
  `).join(`
`);return j(t,i)},T=(t,e)=>{const i=t.kind===a.methods?a.methods:e,o={summary:t.default||void 0};return{category:i,defaultValue:o}},D=({name:t,description:e},i)=>({name:i===a.slots&&!t?"default":t,description:e||void 0,required:!1}),C=({privacy:t,kind:e},i)=>t==="private"?!0:i===a.slots||i===a.css?!1:t!=="public"&&(e==="method"||i!=="attributes"),N=(t,e)=>C(t,e)?void 0:Object.assign(Object.assign(Object.assign({type:"text"},D(t,e)),A(t,e)),{table:T(t,e)}),q=t=>t,m=(t,e,i=q)=>{if(t!=null&&t.length)return t.reduce((o,n)=>{const s=i(N(n,e));if(!s)return o;const r=e===a.slots&&s.name==="default"?"slot":s.name;return o[r]=s,o},{})},z=(t,e)=>{var i;let o;return(i=t==null?void 0:t.modules)===null||i===void 0||i.forEach(n=>{var s;(s=n==null?void 0:n.declarations)===null||s===void 0||s.forEach(r=>{r.tagName===e&&(o=r)})}),o},O=(t,e)=>i=>{const o=z(t,i);if(o)return Object.assign(Object.assign(Object.assign(Object.assign({},m(o.attributes,a.attributes,e)),m(o.members,a.properties,e)),m(o.slots,a.slots,e)),m(o.cssProperties,a.css,e))};/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const y=Symbol.for(""),M=t=>{if((t==null?void 0:t.r)===y)return t==null?void 0:t._$litStatic$},b=t=>({_$litStatic$:t,r:y}),v=new Map,S=t=>(e,...i)=>{const o=i.length;let n,s;const r=[],d=[];let p,l=0,h=!1;for(;l<o;){for(p=e[l];l<o&&(s=i[l],(n=M(s))!==void 0);)p+=n+e[++l],h=!0;d.push(s),r.push(p),l++}if(l===o&&r.push(e[o]),h){const f=r.join("$$lit$$");(e=v.get(f))===void 0&&(r.raw=r,v.set(f,e=r)),i=d}return t(e,...i)},I=S(k);/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const P={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},L=t=>(...e)=>({_$litDirective$:t,values:e});class R{constructor(e){}get _$AU(){return this._$AM._$AU}_$AT(e,i,o){this._$Ct=e,this._$AM=i,this._$Ci=o}_$AS(e,i){return this.update(e,i)}update(e,i){return this.render(...i)}}/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const c=(t,e)=>{var i,o;const n=t._$AN;if(n===void 0)return!1;for(const s of n)(o=(i=s)._$AO)===null||o===void 0||o.call(i,e,!1),c(s,e);return!0},u=t=>{let e,i;do{if((e=t._$AM)===void 0)break;i=e._$AN,i.delete(t),t=e}while((i==null?void 0:i.size)===0)},g=t=>{for(let e;e=t._$AM;t=e){let i=e._$AN;if(i===void 0)e._$AN=i=new Set;else if(i.has(t))break;i.add(t),B(e)}};function H(t){this._$AN!==void 0?(u(this),this._$AM=t,g(this)):this._$AM=t}function Y(t,e=!1,i=0){const o=this._$AH,n=this._$AN;if(n!==void 0&&n.size!==0)if(e)if(Array.isArray(o))for(let s=i;s<o.length;s++)c(o[s],!1),u(o[s]);else o!=null&&(c(o,!1),u(o));else c(this,t)}const B=t=>{var e,i,o,n;t.type==P.CHILD&&((e=(o=t)._$AP)!==null&&e!==void 0||(o._$AP=Y),(i=(n=t)._$AQ)!==null&&i!==void 0||(n._$AQ=H))};class U extends R{constructor(){super(...arguments),this._$AN=void 0}_$AT(e,i,o){super._$AT(e,i,o),g(this),this.isConnected=e._$AU}_$AO(e,i=!0){var o,n;e!==this.isConnected&&(this.isConnected=e,e?(o=this.reconnected)===null||o===void 0||o.call(this):(n=this.disconnected)===null||n===void 0||n.call(this)),i&&(c(this,e),u(this))}setValue(e){if(E(this._$Ct))this._$Ct._$AI(e,this);else{const i=[...this._$Ct._$AH];i[this._$Ci]=e,this._$Ct._$AI(i,this,0)}}disconnected(){}reconnected(){}}class V extends U{constructor(){super(...arguments),this.prevData={}}render(e){return $}update(e,[i]){var o;this.element!==e.element&&(this.element=e.element),this.host=((o=e.options)===null||o===void 0?void 0:o.host)||this.element,this.apply(i),this.groom(i),this.prevData={...i}}apply(e){if(!e)return;const{prevData:i,element:o}=this;for(const n in e){const s=e[n];s!==i[n]&&(o[n]=s)}}groom(e){const{prevData:i,element:o}=this;if(i)for(const n in i)(!e||!(n in e)&&o[n]===i[n])&&(o[n]=void 0)}}class F extends V{constructor(){super(...arguments),this.eventData={}}apply(e){if(e)for(const i in e){const o=e[i];o!==this.eventData[i]&&this.applyEvent(i,o)}}applyEvent(e,i){const{prevData:o,element:n}=this;this.eventData[e]=i,o[e]&&n.removeEventListener(e,this,i),n.addEventListener(e,this,i)}groom(e){const{prevData:i,element:o}=this;if(i)for(const n in i)(!e||!(n in e)&&o[n]===i[n])&&this.groomEvent(n,i[n])}groomEvent(e,i){const{element:o}=this;delete this.eventData[e],o.removeEventListener(e,this,i)}handleEvent(e){const i=this.eventData[e.type];typeof i=="function"?i.call(this.host,e):i.handleEvent(e)}disconnected(){const{eventData:e,element:i}=this;for(const o in e){const n=o.slice(1),s=e[o];i.removeEventListener(n,this,s)}}reconnected(){const{eventData:e,element:i}=this;for(const o in e){const n=o.slice(1),s=e[o];i.addEventListener(n,this,s)}}}class W extends F{apply(e){if(!e)return;const{prevData:i,element:o}=this;for(const n in e){const s=e[n];if(s===i[n])continue;const r=n.slice(1);switch(n[0]){case"@":this.eventData[r]=s,this.applyEvent(r,s);break;case".":o[r]=s;break;case"?":s?o.setAttribute(r,""):o.removeAttribute(r);break;default:s!=null?o.setAttribute(n,String(s)):o.removeAttribute(n);break}}}groom(e){const{prevData:i,element:o}=this;if(i)for(const n in i){const s=n.slice(1);if(!e||!(n in e)&&o[s]===i[n])switch(n[0]){case"@":this.groomEvent(s,i[n]);break;case".":o[s]=void 0;break;case"?":o.removeAttribute(s);break;default:o.removeAttribute(n);break}}}}const Q=L(W),K=t=>{switch(typeof t){case"boolean":return"?";case"object":return".";default:return""}},G=(t,e,{wrapSlots:i})=>{let o="";const n={};return Object.keys(t).forEach(s=>{var r,d;t[s]&&(((d=(r=e[s])===null||r===void 0?void 0:r.table)===null||d===void 0?void 0:d.category)==="slots"?o+=!i||s==="slot"?t[s]:t[s].startsWith("<")?t[s].replace(/(>|\/>)/,` slot="${s}">`):`<span slot="${s}">${t[s]}</span>`:n[s]=t[s])}),[n,o]},J=(t,{joinArrays:e}={})=>Q(Object.keys(t).reduce((i,o)=>{const n=t[o],s=Array.isArray(n),r=e&&s?"":K(n);return i[r+o]=e&&s?n.join(","):n,i},{})),X=(t={})=>(e,i)=>{const o=b(i.component),[n,s]=G(e,i.argTypes,t);return I`<${o} ${J(n,t)}>${b(s)}</${o}>`},Z="1.0.0",ee="",te=[{kind:"javascript-module",path:"src/monaco-component.ts",declarations:[{kind:"class",description:`\`<monaco-editor>\` is a web component that wraps the 
[Monaco Editor](https://microsoft.github.io/monaco-editor/). 
The main achievement of this component is to provide a simple 
way to use Monaco Editor in your web application without the need 
for any bundler or build tools. You can simply load this component 
from CDN and use it. The default version is the bare minimum, 
but additional languages and themes might be loaded just by providing proper attributes.`,name:"MonacoEditor",cssProperties:[{description:"min-height of the editor",name:"--monaco-editor-height",default:"300px"}],members:[{kind:"field",name:"value",type:"string",default:"",description:"The value of the editor. If `name` is present, \nthe value will be set to the hidden input as well",attribute:"value"},{kind:"field",name:"name",type:"string",default:"",description:"If present, a hidden input will be created with this name\nIt might be helpful for those who use component within a `form`",attribute:"name"},{kind:"field",name:"filename",type:"string",default:"",description:`An abstract file name that used for faster models caching and cross-editor
communication.  

<small>eq: In case you have multiple typescript files, this property will allow to import
types from one of the to another.</small>`,attribute:"filename"},{kind:"field",name:"theme",type:"string",default:"github",description:"The one of predefined themes. You may customize the theme\nby setting its directly to the `monaco` object.  \n\n```javascript \nconst editorElement = document.querySelector('monaco-editor')  \neditorElement.monaco.editor.defineTheme('my-theme', {...})  \neditorElement.editor.setTheme('my-theme')  \n```",attribute:"theme",enum:["active4d","all-hallows-eve","amy","birds-of-paradise","blackboard","brilliance-black","brilliance-dull","chrome-devtools","clouds","clouds-midnight","cobalt","cobalt2","dawn","dracula","dreamweaver","eiffel","espresso-libre","github","github-dark","github-light","idle","idlefingers","iplastic","katzenmilch","krtheme","kuroir-theme","lazy","magicwb--amiga-","merbivore","merbivore-soft","monoindustrial","monokai","monokai-bright","night-owl","nord","oceanic-next","pastels-on-dark","slush-and-poppies","solarized-dark","solarized-light","spacecadet","sunburst","textmate--mac-classic-","tomorrow","tomorrow-night","tomorrow-night-blue","tomorrow-night-bright","tomorrow-night-eighties","twilight","upstream-sunburst","vibrant-ink","xcode-default","zenburnesque"]},{kind:"field",name:"lang",type:"string",default:"javascript",description:"The editor content language.",attribute:"lang",enum:["abap","apex","azcli","bat","bicep","cameligo","clojure","coffee","cpp","csharp","csp","css","cypher","dart","dockerfile","ecl","elixir","flow9","freemarker2","fsharp","go","graphql","handlebars","hcl","html","ini","java","javascript","json","julia","kotlin","less","lexon","liquid","lua","m3","markdown","mips","msdax","mysql","objective","pascal","pascaligo","perl","pgsql","php","pla","postiats","powerquery","powershell","protobuf","pug","python","qsharp","r","razor","redis","redshift","restructuredtext","ruby","rust","sb","scala","scheme","scss","shell","solidity","sophia","sparql","sql","st","swift","systemverilog","tcl","twig","typescript","vb","xml","yaml"]},{kind:"field",name:"submitOnSave",type:"boolean",default:!1,description:"Makes the editor submit closest form on `ctrl + s` or `cmd + s` pressing.",attribute:"submit-on-save"},{kind:"field",name:"disabled",type:"boolean",default:!1,description:`Will prevent the component from any user actions.
You may still copy the value or focus into the editor`,attribute:"disabled"},{kind:"field",name:"minimap",type:"boolean",default:!1,description:"If `true`, the editor will render minimap on the right side.",attribute:"minimap"},{kind:"field",name:"lineNumbers",type:"boolean",default:!1,description:"Shows line numbers in the editor",attribute:"line-numbers"},{kind:"field",name:"options",type:`{any} Editor options. Read more about available options 
[here](https://microsoft.github.io/monaco-editor/typedoc/interfaces/editor.IStandaloneEditorConstructionOptions.html)`,default:"{}",description:`Editor options. Read more about available options 
[here](https://microsoft.github.io/monaco-editor/typedoc/interfaces/editor.IStandaloneEditorConstructionOptions.html)`,attribute:"options"},{kind:"field",name:"monacoStyles",type:"string"},{kind:"field",name:"container",type:{text:"HTMLDivElement | undefined"}},{kind:"field",name:"_input",type:{text:"HTMLInputElement | undefined"},privacy:"private"},{kind:"field",name:"monaco",type:"{ any }",privacy:"public",description:`Monaco global namespace. Read more about it 
[here](https://microsoft.github.io/monaco-editor/typedoc/index.html)`},{kind:"field",name:"editor",type:"{ any }",privacy:"public",description:`Monaco editor instance. Read more about it 
[here](https://microsoft.github.io/monaco-editor/typedoc/modules/editor.html)`},{kind:"field",name:"formatCode",privacy:"public",description:"Formats the code in the editor\n\n```javascript\ngetElementsByTagName('monaco-editor')[0].formatCode()\n```",type:"object",additionalProperties:!1},{kind:"field",name:"resizeEditor",privacy:"public",description:"Manually triggers the resize of the editor\n\n```javascript\ngetElementsByTagName('monaco-editor')[0].resizeEditor()\n```",type:"object",additionalProperties:!1},{kind:"method",name:"handleValueChange"},{kind:"method",name:"handleThemeChange"},{kind:"method",name:"handleLanguageChange"},{kind:"method",name:"handleKeyDown",privacy:"private",type:"object",additionalProperties:!1},{kind:"method",name:"initialize",type:"object",additionalProperties:!1},{kind:"method",name:"createEditor"}],events:[{description:"Fired when `ctrl + s` or `cmd + s` is pressed",name:"save"},{description:"Fired when the editor is initialized",name:"ready"}],attributes:[{name:"value",type:"string",default:"",description:"The value of the editor. If `name` is present, \nthe value will be set to the hidden input as well",fieldName:"value"},{name:"name",type:"string",default:"",description:"If present, a hidden input will be created with this name\nIt might be helpful for those who use component within a `form`",fieldName:"name"},{name:"filename",type:"string",default:"",description:`An abstract file name that used for faster models caching and cross-editor
communication.  

<small>eq: In case you have multiple typescript files, this property will allow to import
types from one of the to another.</small>`,fieldName:"filename"},{name:"theme",type:"string",default:"github",description:"The one of predefined themes. You may customize the theme\nby setting its directly to the `monaco` object.  \n\n```javascript \nconst editorElement = document.querySelector('monaco-editor')  \neditorElement.monaco.editor.defineTheme('my-theme', {...})  \neditorElement.editor.setTheme('my-theme')  \n```",fieldName:"theme",enum:["active4d","all-hallows-eve","amy","birds-of-paradise","blackboard","brilliance-black","brilliance-dull","chrome-devtools","clouds","clouds-midnight","cobalt","cobalt2","dawn","dracula","dreamweaver","eiffel","espresso-libre","github","github-dark","github-light","idle","idlefingers","iplastic","katzenmilch","krtheme","kuroir-theme","lazy","magicwb--amiga-","merbivore","merbivore-soft","monoindustrial","monokai","monokai-bright","night-owl","nord","oceanic-next","pastels-on-dark","slush-and-poppies","solarized-dark","solarized-light","spacecadet","sunburst","textmate--mac-classic-","tomorrow","tomorrow-night","tomorrow-night-blue","tomorrow-night-bright","tomorrow-night-eighties","twilight","upstream-sunburst","vibrant-ink","xcode-default","zenburnesque"]},{name:"lang",type:"string",default:"javascript",description:"The editor content language.",fieldName:"lang",enum:["abap","apex","azcli","bat","bicep","cameligo","clojure","coffee","cpp","csharp","csp","css","cypher","dart","dockerfile","ecl","elixir","flow9","freemarker2","fsharp","go","graphql","handlebars","hcl","html","ini","java","javascript","json","julia","kotlin","less","lexon","liquid","lua","m3","markdown","mips","msdax","mysql","objective","pascal","pascaligo","perl","pgsql","php","pla","postiats","powerquery","powershell","protobuf","pug","python","qsharp","r","razor","redis","redshift","restructuredtext","ruby","rust","sb","scala","scheme","scss","shell","solidity","sophia","sparql","sql","st","swift","systemverilog","tcl","twig","typescript","vb","xml","yaml"]},{name:"submit-on-save",type:"boolean",default:!1,description:"Makes the editor submit closest form on `ctrl + s` or `cmd + s` pressing.",fieldName:"submitOnSave"},{name:"disabled",type:"boolean",default:!1,description:`Will prevent the component from any user actions.
You may still copy the value or focus into the editor`,fieldName:"disabled"},{name:"minimap",type:"boolean",default:!1,description:"If `true`, the editor will render minimap on the right side.",fieldName:"minimap"},{name:"line-numbers",type:"boolean",default:!1,description:"Shows line numbers in the editor",fieldName:"lineNumbers"},{name:"options",type:`{any} Editor options. Read more about available options 
[here](https://microsoft.github.io/monaco-editor/typedoc/interfaces/editor.IStandaloneEditorConstructionOptions.html)`,default:"{}",description:`Editor options. Read more about available options 
[here](https://microsoft.github.io/monaco-editor/typedoc/interfaces/editor.IStandaloneEditorConstructionOptions.html)`,fieldName:"options"}],superclass:{name:"LitElement",package:"lit"},tagName:"monaco-editor",customElement:!0}],exports:[{kind:"js",name:"MonacoEditor",declaration:{name:"MonacoEditor",module:"src/monaco-component.ts"}}]}],w={schemaVersion:Z,readme:ee,modules:te};_(w);const re={docs:{isFullscreen:!0,showNav:!1,extractArgTypes:O(w)},backgrounds:{default:"light"}},ae=X({wrapSlots:!0,joinArrays:!0});export{re as parameters,ae as render};
//# sourceMappingURL=preview-dcf8b189.js.map
